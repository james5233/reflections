Creating a remote repository is helpful when the multiple people are working
on a project or when one needs access to the repository from multiple 
devices which may or may not belong to us. The latter may be true in case 
one has to work while they are travelling.

Manual push and pull to or from a remote repository is preferred over an 
automatic setup which triggers update on specific events, say a commit,
because of the same reasons why manual commits in git are preferred over
an automatic system of version control - flexibility, freedom, and
robustness.

Branches are useful when the changes one wants to make to the project are
closely related to it. Also, authorization to modify a project is necessary
for branching on it. It is not reasonabel to grant everybody rights to
modify a project just because they want to try out some new ideas with it.
In this case cloning is the choice. Forking is essentially cloning with
a few added features, like acknowledgement of the source, etc.

Keeping a local copy of the last known state of the remote repository is
helpful when any change that involves comparison between the local and
remote branches is to be made. Network usage is reduced and offline work
becomes possible. One can say that the speed of processing is improved
gratly as the latency involved with network transactions is eliminated.

Using Git or GitHub makes version control much easier. I do not think that 
there would be any advantages to collaboration techniques that do not use
some sort of authentication and versioning control.
